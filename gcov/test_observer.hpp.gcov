        -:    0:Source:/usr/include/boost/test/test_observer.hpp
        -:    0:Graph:test-cases.gcno
        -:    0:Data:test-cases.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://  (C) Copyright Gennadiy Rozental 2005-2008.
        -:    2://  Distributed under the Boost Software License, Version 1.0.
        -:    3://  (See accompanying file LICENSE_1_0.txt or copy at 
        -:    4://  http://www.boost.org/LICENSE_1_0.txt)
        -:    5:
        -:    6://  See http://www.boost.org/libs/test for the library home page.
        -:    7://
        -:    8://  File        : $RCSfile$
        -:    9://
        -:   10://  Version     : $Revision$
        -:   11://
        -:   12://  Description : defines abstract interface for test observer
        -:   13:// ***************************************************************************
        -:   14:
        -:   15:#ifndef BOOST_TEST_TEST_OBSERVER_HPP_021005GER
        -:   16:#define BOOST_TEST_TEST_OBSERVER_HPP_021005GER
        -:   17:
        -:   18:// Boost.Test
        -:   19:#include <boost/test/detail/fwd_decl.hpp>
        -:   20:#include <boost/test/detail/global_typedef.hpp>
        -:   21:#include <boost/test/detail/config.hpp>
        -:   22:
        -:   23:#include <boost/test/detail/suppress_warnings.hpp>
        -:   24:
        -:   25://____________________________________________________________________________//
        -:   26:
        -:   27:namespace boost {
        -:   28:
        -:   29:namespace unit_test {
        -:   30:
        -:   31:// ************************************************************************** //
        -:   32:// **************                 test_observer                ************** //
        -:   33:// ************************************************************************** //
        -:   34:
    #####:   35:class BOOST_TEST_DECL test_observer {
        -:   36:public:
        -:   37:    // test observer interface
    #####:   38:    virtual void    test_start( counter_t /* test_cases_amount */ ) {}
    #####:   39:    virtual void    test_finish() {}
    #####:   40:    virtual void    test_aborted() {}
        -:   41:
    #####:   42:    virtual void    test_unit_start( test_unit const& ) {}
    #####:   43:    virtual void    test_unit_finish( test_unit const&, unsigned long /* elapsed */ ) {}
    #####:   44:    virtual void    test_unit_skipped( test_unit const& ) {}
    #####:   45:    virtual void    test_unit_aborted( test_unit const& ) {}
        -:   46:
    #####:   47:    virtual void    assertion_result( bool /* passed */ ) {}
    #####:   48:    virtual void    exception_caught( execution_exception const& ) {}
        -:   49:
    #####:   50:    virtual int     priority() { return 0; }
        -:   51:
        -:   52:protected:
    #####:   53:    BOOST_TEST_PROTECTED_VIRTUAL ~test_observer() {}
        -:   54:};
        -:   55:
        -:   56:} // unit_test
        -:   57:
        -:   58:} // namespace boost
        -:   59:
        -:   60://____________________________________________________________________________//
        -:   61:
        -:   62:#include <boost/test/detail/enable_warnings.hpp>
        -:   63:
        -:   64:#endif // BOOST_TEST_TEST_OBSERVER_HPP_021005GER
        -:   65:
